# Generated by Django 4.2.20 on 2025-07-09 04:32

import auth_app.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='Format: YYYY/YYYY (masalan, 2024/2025)', max_length=9, unique=True, verbose_name="O'quv yili")),
                ('is_active_for_application', models.BooleanField(default=False, help_text="Agar 'True' bo'lsa, talabalar shu o'quv yili uchun ariza topshira oladi.", verbose_name='Arizalar uchun faolmi?')),
            ],
            options={
                'verbose_name': "O'quv yili",
                'verbose_name_plural': "O'quv yillari",
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='Appeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(verbose_name='Apellyatsiya sababi/mazmuni')),
                ('status', models.CharField(choices=[('SUBMITTED', 'Topshirilgan'), ('REVIEWING', "Ko'rib chiqilmoqda"), ('CLOSED', 'Yopilgan')], default='SUBMITTED', max_length=20, verbose_name='Apellyatsiya holati')),
                ('outcome', models.CharField(blank=True, choices=[('SATISFIED', 'Qanoatlantirildi'), ('REJECTED', 'Rad etildi'), ('PARTIALLY_SATISFIED', 'Qisman qanoatlantirildi')], max_length=25, null=True, verbose_name='Apellyatsiya yakuniy natijasi')),
                ('decision_comment', models.TextField(blank=True, null=True, verbose_name="Komissiya qarori bo'yicha izoh")),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Topshirilgan vaqti')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name="Ko'rib chiqilgan vaqti")),
            ],
            options={
                'verbose_name': 'Apellyatsiya arizasi',
                'verbose_name_plural': 'Apellyatsiya arizalari',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='GrantApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(choices=[('DIFFERENTIATED', 'Tabaqalashtirilgan (qayta taqsimlash)'), ('ADDITIONAL_STATE', "Qo'shimcha davlat granti"), ('UNIVERSITY_FUNDED', 'OTM granti (moliyaviy mustaqil)')], max_length=20, verbose_name='Ariza turi')),
                ('status', models.CharField(choices=[('DRAFT', 'Qoralama'), ('SUBMITTED', 'Topshirilgan'), ('ACADEMIC_REVIEW', 'Akademik komissiyada'), ('SOCIAL_REVIEW', 'Ijtimoiy komissiyada'), ('SPECIAL_COMMISSION_REVIEW', 'Maxsus komissiyada'), ('COUNCIL_REVIEW', 'Kengashda'), ('APPROVED', 'Tasdiqlangan'), ('REJECTED', 'Rad etilgan'), ('APPEALED', 'Apellyatsiya berilgan')], default='DRAFT', max_length=30, verbose_name='Ariza holati')),
                ('gpa_from_hemis', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='GPA (HEMIS tizimidan)')),
                ('academic_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Akademik ball (maks. 80)')),
                ('social_activity_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Ijtimoiy faollik balli (maks. 20)')),
                ('total_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Umumiy ball (maks. 100)')),
                ('final_grant_type', models.CharField(blank=True, choices=[('FULL', "To'liq ta'lim granti"), ('PARTIAL', "To'liq bo'lmagan ta'lim granti"), ('PERCENTAGE', 'Foizli (OTM granti)'), ('NONE', 'Grant ajratilmagan')], max_length=15, null=True, verbose_name='Yakuniy grant turi')),
                ('final_grant_percentage', models.PositiveSmallIntegerField(blank=True, help_text="Faqat 'OTM granti' uchun to'ldiriladi", null=True, verbose_name='OTM granti foizi (%)')),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='Rad etish sababi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan vaqti')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan vaqti')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='auth_app.academicyear', verbose_name="O'quv yili")),
            ],
            options={
                'verbose_name': 'Grant uchun ariza',
                'verbose_name_plural': 'Grant uchun arizalar',
                'ordering': ['-academic_year', '-total_score'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Tizimga kirish uchun foydalaniladigan login (Talaba ID raqami)', max_length=150, unique=True, verbose_name='Foydalanuvchi nomi (login)')),
                ('student_id_number', models.CharField(blank=True, help_text='API dan olingan talabaning ID raqami', max_length=50, null=True, unique=True, verbose_name='Talaba ID raqami (API)')),
                ('api_user_hash', models.CharField(blank=True, help_text='API dagi foydalanuvchi uchun unikal SHA256 hash', max_length=255, null=True, unique=True, verbose_name='API foydalanuvchi hash')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ismi')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Familiyasi')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Otasining ismi')),
                ('full_name_api', models.CharField(blank=True, max_length=255, null=True, verbose_name="To'liq F.I.Sh. (API)")),
                ('short_name_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Qisqa F.I.Sh. (API)')),
                ('image_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Talabning surati (URL)')),
                ('birth_date_timestamp', models.BigIntegerField(blank=True, null=True, verbose_name="Tug'ilgan sana (timestamp)")),
                ('passport_pin', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pasport PIN')),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pasport raqami')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Telefon raqami')),
                ('gender_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Jinsi kodi')),
                ('gender_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Jinsi')),
                ('university_name_api', models.CharField(blank=True, max_length=255, null=True, verbose_name='Universitet nomi (API)')),
                ('specialty_id_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Mutaxassislik ID (API)')),
                ('specialty_code_api', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mutaxassislik kodi (API)')),
                ('specialty_name_api', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mutaxassislik nomi (API)')),
                ('student_status_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Talaba status kodi')),
                ('student_status_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Talaba statusi')),
                ('education_form_code', models.CharField(blank=True, max_length=10, null=True, verbose_name="Ta'lim shakli kodi")),
                ('education_form_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Ta'lim shakli")),
                ('education_type_code', models.CharField(blank=True, max_length=10, null=True, verbose_name="Ta'lim turi kodi")),
                ('education_type_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Ta'lim turi")),
                ('payment_form_code', models.CharField(blank=True, max_length=10, null=True, verbose_name="To'lov shakli kodi")),
                ('payment_form_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="To'lov shakli")),
                ('group_id_api', models.IntegerField(blank=True, null=True, verbose_name='Guruh ID (API)')),
                ('group_name_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Guruh nomi (API)')),
                ('group_education_lang_code', models.CharField(blank=True, max_length=10, null=True, verbose_name="Guruh ta'lim tili kodi")),
                ('group_education_lang_name', models.CharField(blank=True, max_length=50, null=True, verbose_name="Guruh ta'lim tili")),
                ('faculty_id_api', models.IntegerField(blank=True, null=True, verbose_name='Fakultet ID (API)')),
                ('faculty_name_api', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fakultet nomi (API)')),
                ('faculty_code_api', models.CharField(blank=True, max_length=50, null=True, verbose_name='Fakultet kodi (API)')),
                ('education_lang_code', models.CharField(blank=True, max_length=10, null=True, verbose_name="Ta'lim tili kodi")),
                ('education_lang_name', models.CharField(blank=True, max_length=50, null=True, verbose_name="Ta'lim tili")),
                ('level_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Kurs kodi')),
                ('level_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Kurs nomi')),
                ('semester_id_api', models.IntegerField(blank=True, null=True, verbose_name='Semestr ID (API)')),
                ('semester_code_api', models.CharField(blank=True, max_length=10, null=True, verbose_name='Semestr kodi (API)')),
                ('semester_name_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Semestr nomi (API)')),
                ('semester_is_current', models.BooleanField(blank=True, null=True, verbose_name='Joriy semestr')),
                ('semester_education_year_code', models.CharField(blank=True, max_length=20, null=True, verbose_name="Semestr o'quv yili kodi")),
                ('semester_education_year_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Semestr o'quv yili nomi")),
                ('semester_education_year_is_current', models.BooleanField(blank=True, null=True, verbose_name="Joriy o'quv yili (semestr)")),
                ('avg_gpa', models.CharField(blank=True, max_length=10, null=True, verbose_name="O'rtacha ball (GPA)")),
                ('password_is_valid_api', models.BooleanField(blank=True, null=True, verbose_name="Parol to'g'riligi (API)")),
                ('address_api', models.TextField(blank=True, null=True, verbose_name='Manzil (API)')),
                ('country_code_api', models.CharField(blank=True, max_length=10, null=True, verbose_name='Davlat kodi (API)')),
                ('country_name_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Davlat nomi (API)')),
                ('province_code_api', models.CharField(blank=True, max_length=20, null=True, verbose_name='Viloyat kodi (API)')),
                ('province_name_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Viloyat nomi (API)')),
                ('district_code_api', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tuman kodi (API)')),
                ('district_name_api', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tuman nomi (API)')),
                ('social_category_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Ijtimoiy toifa kodi')),
                ('social_category_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ijtimoiy toifa nomi')),
                ('accommodation_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Turar joy kodi')),
                ('accommodation_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Turar joy nomi')),
                ('validate_url_api', models.URLField(blank=True, max_length=500, null=True, verbose_name='Validatsiya havolasi (API)')),
                ('last_login_api', models.DateTimeField(blank=True, null=True, verbose_name='Oxirgi kirish (API)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan vaqti')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan vaqti')),
            ],
            options={
                'verbose_name': 'Talaba (API)',
                'verbose_name_plural': 'Talabalar (API)',
                'ordering': ['-updated_at', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='SocialActivityEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_culture_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 20', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='1. Kitobxonlik madaniyati')),
                ('five_initiatives_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 20', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='2. “5 muhim tashabbus” doirasidagi to‘garaklarda faol ishtiroki')),
                ('academic_progress_bonus_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 10', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='3. Talabaning akademik o‘zlashtirishi')),
                ('ethics_adherence_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='4. Talabaning oliy ta’lim tashkilotining ichki tartib qoidalari va Odob-axloq kodeksiga rioya etishi')),
                ('competition_results_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 10', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='5. Xalqaro, respublika, viloyat miqyosidagi ko‘rik-tanlov, fan olimpiadalari va sport musobaqalarida erishgan natijalari')),
                ('attendance_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='6. Talabaning darslarga to‘liq va kechikmasdan kelishi')),
                ('enlightenment_lessons_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 10', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='7. Talabalarning “Ma’rifat darslari”dagi faol ishtiroki')),
                ('volunteering_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='8. Volontyorlik va jamoat ishlaridagi faolligi')),
                ('cultural_events_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='9. Teatr va muzey, xiyobon, kino, tarixiy qadamjolarga tashriflar')),
                ('sports_lifestyle_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='10. Talabalarning sport bilan shug‘ullanishi va sog‘lom turmush tarziga amal qilishi')),
                ('other_activities_points', models.PositiveSmallIntegerField(default=0, help_text='Maksimal ball: 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='11. Ma’naviy-ma’rifiy sohaga oid boshqa yo‘nalishlardagi faolligi')),
                ('evaluator_comment', models.TextField(blank=True, help_text="Ballarni asoslash uchun qo'shimcha izohlar", verbose_name='Baholovchi izohi')),
                ('evaluation_date', models.DateTimeField(blank=True, null=True, verbose_name='Baholangan sana')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_evaluation', to='auth_app.grantapplication', verbose_name='Ariza')),
                ('evaluator', models.ForeignKey(blank=True, help_text='Admin panelida avtomatik belgilanadi', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name="Baholovchi (komissiya a'zosi)")),
            ],
            options={
                'verbose_name': 'Ijtimoiy faollikni baholash',
                'verbose_name_plural': 'Ijtimoiy faollikni baholashlar',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('verb', models.CharField(choices=[('APPLICATION_SUBMITTED', 'Yangi ariza topshirildi'), ('STATUS_CHANGED', "Holat o'zgardi"), ('APPEAL_SUBMITTED', 'Yangi apellyatsiya kelib tushdi'), ('APPEAL_DECIDED', "Apellyatsiya bo'yicha qaror qabul qilindi"), ('GENERAL_ANNOUNCEMENT', "Umumiy e'lon")], max_length=50, verbose_name='Bildirishnoma turi')),
                ('target_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, verbose_name='Tavsif')),
                ('read', models.BooleanField(default=False, verbose_name="O'qilganmi?")),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('actor_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor_notifications', to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Qabul qiluvchi')),
                ('target_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_notifications', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Bildirishnoma',
                'verbose_name_plural': 'Bildirishnomalar',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='grantapplication',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grant_applications', to='auth_app.student', verbose_name='Talaba'),
        ),
        migrations.CreateModel(
            name='ApplicationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_criterion', models.CharField(choices=[('C1', '1. Kitobxonlik madaniyati'), ('C2', '2. “5 muhim tashabbus” ishtiroki'), ('C3', '3. Akademik o‘zlashtirish (bonus)'), ('C4', '4. Odob-axloq qoidalari'), ('C5', '5. Musobaqa va tanlovlar'), ('C6', '6. Davomat'), ('C7', '7. “Ma’rifat darslari”'), ('C8', '8. Volontyorlik'), ('C9', '9. Madaniy tadbirlar'), ('C10', '10. Sport va sog‘lom turmush tarzi'), ('C11', '11. Boshqa ma’naviy faoliyat'), ('OTHER', 'Boshqa (Maxsus toifa, OTM granti va h.k.)')], help_text='Yuklayotgan hujjatingiz qaysi faoliyat turiga oid ekanligini tanlang.', max_length=5, verbose_name="Hujjat tegishli bo'lgan mezon")),
                ('description', models.CharField(help_text="Masalan, 'Respublika fan olimpiadasi diplomi, 1-o'rin'", max_length=255, verbose_name='Hujjatning qisqacha tavsifi')),
                ('file', models.FileField(upload_to=auth_app.models.grant_document_path, verbose_name='Hujjat fayli')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='auth_app.grantapplication', verbose_name='Ariza')),
            ],
            options={
                'verbose_name': 'Arizaga ilova qilingan hujjat',
                'verbose_name_plural': 'Arizaga ilova qilingan hujjatlar',
                'ordering': ['evaluation_criterion'],
            },
        ),
        migrations.CreateModel(
            name='AppealDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Qisqacha tavsif')),
                ('file', models.FileField(upload_to=auth_app.models.appeal_document_path, verbose_name='Hujjat fayli')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('appeal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='auth_app.appeal', verbose_name='Apellyatsiya arizasi')),
            ],
            options={
                'verbose_name': 'Apellyatsiya hujjati',
                'verbose_name_plural': 'Apellyatsiya hujjatlari',
            },
        ),
        migrations.AddField(
            model_name='appeal',
            name='application',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='appeal', to='auth_app.grantapplication', verbose_name='Apellyatsiya qilinayotgan ariza'),
        ),
        migrations.AddField(
            model_name='appeal',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_appeals', to=settings.AUTH_USER_MODEL, verbose_name="Ko'rib chiquvchi"),
        ),
        migrations.AlterUniqueTogether(
            name='grantapplication',
            unique_together={('student', 'academic_year', 'application_type')},
        ),
    ]
